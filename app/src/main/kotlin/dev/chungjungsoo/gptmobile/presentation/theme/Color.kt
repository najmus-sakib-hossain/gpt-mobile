package dev.chungjungsoo.gptmobile.presentation.theme

import androidx.compose.ui.graphics.Color

// Light Theme Colors (converted from OKLCH)
val primaryLight = Color(0xFF000000) // --primary: oklch(0 0 0) - black
val onPrimaryLight = Color(0xFFFFFFFF) // --primary-foreground: oklch(1 0 0) - white
val primaryContainerLight = Color(0xFFEFEFEF) // --secondary: oklch(0.94 0 0)
val onPrimaryContainerLight = Color(0xFF000000) // --secondary-foreground: oklch(0 0 0)
val secondaryLight = Color(0xFFEFEFEF) // --secondary: oklch(0.94 0 0)
val onSecondaryLight = Color(0xFF000000) // --secondary-foreground: oklch(0 0 0)
val secondaryContainerLight = Color(0xFFEFEFEF) // --accent: oklch(0.94 0 0)
val onSecondaryContainerLight = Color(0xFF000000) // --accent-foreground: oklch(0 0 0)
val tertiaryLight = Color(0xFF000000) // Using primary
val onTertiaryLight = Color(0xFFFFFFFF)
val tertiaryContainerLight = Color(0xFFEFEFEF)
val onTertiaryContainerLight = Color(0xFF000000)
val errorLight = Color(0xFFD76F5C) // --destructive: oklch(0.63 0.19 23.03)
val onErrorLight = Color(0xFFFFFFFF) // --destructive-foreground: oklch(1 0 0)
val errorContainerLight = Color(0xFFFFDAD6)
val onErrorContainerLight = Color(0xFF410002)
val backgroundLight = Color(0xFFFCFCFC) // --background: oklch(0.99 0 0)
val onBackgroundLight = Color(0xFF000000) // --foreground: oklch(0 0 0)
val surfaceLight = Color(0xFFFFFFFF) // --card: oklch(1 0 0)
val onSurfaceLight = Color(0xFF000000) // --card-foreground: oklch(0 0 0)
val surfaceVariantLight = Color(0xFFF8F8F8) // --muted: oklch(0.97 0 0)
val onSurfaceVariantLight = Color(0xFF707070) // --muted-foreground: oklch(0.44 0 0)
val outlineLight = Color(0xFFEAEAEA) // --border: oklch(0.92 0 0)
val outlineVariantLight = Color(0xFFEFEFEF) // --input: oklch(0.94 0 0)
val scrimLight = Color(0xFF000000) // --ring: oklch(0 0 0)
val inverseSurfaceLight = Color(0xFF2C322E)
val inverseOnSurfaceLight = Color(0xFFECF2ED)
val inversePrimaryLight = Color(0xFF8AD6B6)
val surfaceDimLight = Color(0xFFF8F8F8)
val surfaceBrightLight = Color(0xFFFFFFFF)
val surfaceContainerLowestLight = Color(0xFFFFFFFF)
val surfaceContainerLowLight = Color(0xFFFCFCFC)
val surfaceContainerLight = Color(0xFFF8F8F8)
val surfaceContainerHighLight = Color(0xFFEFEFEF)
val surfaceContainerHighestLight = Color(0xFFEAEAEA)

// Light Medium Contrast
val primaryLightMediumContrast = Color(0xFF000000)
val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
val primaryContainerLightMediumContrast = Color(0xFFDDDDDD)
val onPrimaryContainerLightMediumContrast = Color(0xFF000000)
val secondaryLightMediumContrast = Color(0xFFDDDDDD)
val onSecondaryLightMediumContrast = Color(0xFF000000)
val secondaryContainerLightMediumContrast = Color(0xFFDDDDDD)
val onSecondaryContainerLightMediumContrast = Color(0xFF000000)
val tertiaryLightMediumContrast = Color(0xFF000000)
val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
val tertiaryContainerLightMediumContrast = Color(0xFFDDDDDD)
val onTertiaryContainerLightMediumContrast = Color(0xFF000000)
val errorLightMediumContrast = Color(0xFFD76F5C)
val onErrorLightMediumContrast = Color(0xFFFFFFFF)
val errorContainerLightMediumContrast = Color(0xFFD76F5C)
val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
val backgroundLightMediumContrast = Color(0xFFFCFCFC)
val onBackgroundLightMediumContrast = Color(0xFF000000)
val surfaceLightMediumContrast = Color(0xFFFFFFFF)
val onSurfaceLightMediumContrast = Color(0xFF000000)
val surfaceVariantLightMediumContrast = Color(0xFFF8F8F8)
val onSurfaceVariantLightMediumContrast = Color(0xFF606060)
val outlineLightMediumContrast = Color(0xFFDDDDDD)
val outlineVariantLightMediumContrast = Color(0xFFDDDDDD)
val scrimLightMediumContrast = Color(0xFF000000)
val inverseSurfaceLightMediumContrast = Color(0xFF2C322E)
val inverseOnSurfaceLightMediumContrast = Color(0xFFECF2ED)
val inversePrimaryLightMediumContrast = Color(0xFF8AD6B6)
val surfaceDimLightMediumContrast = Color(0xFFF8F8F8)
val surfaceBrightLightMediumContrast = Color(0xFFFFFFFF)
val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
val surfaceContainerLowLightMediumContrast = Color(0xFFFCFCFC)
val surfaceContainerLightMediumContrast = Color(0xFFF8F8F8)
val surfaceContainerHighLightMediumContrast = Color(0xFFEFEFEF)
val surfaceContainerHighestLightMediumContrast = Color(0xFFEAEAEA)

// Light High Contrast
val primaryLightHighContrast = Color(0xFF000000)
val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
val primaryContainerLightHighContrast = Color(0xFF000000)
val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
val secondaryLightHighContrast = Color(0xFFD0D0D0)
val onSecondaryLightHighContrast = Color(0xFF000000)
val secondaryContainerLightHighContrast = Color(0xFFD0D0D0)
val onSecondaryContainerLightHighContrast = Color(0xFF000000)
val tertiaryLightHighContrast = Color(0xFF000000)
val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
val tertiaryContainerLightHighContrast = Color(0xFF000000)
val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
val errorLightHighContrast = Color(0xFFD76F5C)
val onErrorLightHighContrast = Color(0xFFFFFFFF)
val errorContainerLightHighContrast = Color(0xFFD76F5C)
val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
val backgroundLightHighContrast = Color(0xFFFCFCFC)
val onBackgroundLightHighContrast = Color(0xFF000000)
val surfaceLightHighContrast = Color(0xFFFFFFFF)
val onSurfaceLightHighContrast = Color(0xFF000000)
val surfaceVariantLightHighContrast = Color(0xFFF8F8F8)
val onSurfaceVariantLightHighContrast = Color(0xFF000000)
val outlineLightHighContrast = Color(0xFF3C4540)
val outlineVariantLightHighContrast = Color(0xFF3C4540)
val scrimLightHighContrast = Color(0xFF000000)
val inverseSurfaceLightHighContrast = Color(0xFF2C322E)
val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
val inversePrimaryLightHighContrast = Color(0xFFAFFCDB)
val surfaceDimLightHighContrast = Color(0xFFD6DBD6)
val surfaceBrightLightHighContrast = Color(0xFFF5FBF5)
val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
val surfaceContainerLowLightHighContrast = Color(0xFFEFF5F0)
val surfaceContainerLightHighContrast = Color(0xFFE9EFEA)
val surfaceContainerHighLightHighContrast = Color(0xFFE4EAE4)
val surfaceContainerHighestLightHighContrast = Color(0xFFDEE4DF)

// Dark Theme Colors (Pure Black OLED-friendly)
val primaryDark = Color(0xFFFFFFFF) // --primary: white
val onPrimaryDark = Color(0xFF000000) // --primary-foreground: black
val primaryContainerDark = Color(0xFF404040) // --secondary: oklch(0.25 0 0)
val onPrimaryContainerDark = Color(0xFFFFFFFF) // --secondary-foreground: white
val secondaryDark = Color(0xFF404040) // --secondary: oklch(0.25 0 0)
val onSecondaryDark = Color(0xFFFFFFFF) // --secondary-foreground: white
val secondaryContainerDark = Color(0xFF525252) // --accent: oklch(0.32 0 0)
val onSecondaryContainerDark = Color(0xFFFFFFFF) // --accent-foreground: white
val tertiaryDark = Color(0xFFFFFFFF) // Using primary
val onTertiaryDark = Color(0xFF000000)
val tertiaryContainerDark = Color(0xFF404040)
val onTertiaryContainerDark = Color(0xFFFFFFFF)
val errorDark = Color(0xFFDF826F) // --destructive: oklch(0.69 0.2 23.91)
val onErrorDark = Color(0xFF000000) // --destructive-foreground: black
val errorContainerDark = Color(0xFF93000A)
val onErrorContainerDark = Color(0xFFFFDAD6)
val backgroundDark = Color(0xFF0A0A0A) // Dark gray background
val onBackgroundDark = Color(0xFFFFFFFF) // White text
val surfaceDark = Color(0xFF0A0A0A) // Dark gray surface
val onSurfaceDark = Color(0xFFFFFFFF) // White text
val surfaceVariantDark = Color(0xFF1A1A1A) // Very dark gray for contrast
val onSurfaceVariantDark = Color(0xFFB8B8B8) // --muted-foreground: oklch(0.72 0 0)
val outlineDark = Color(0xFF2A2A2A) // Dark border
val outlineVariantDark = Color(0xFF404040) // Slightly lighter border
val scrimDark = Color(0xFFB8B8B8) // --ring: oklch(0.72 0 0)
val inverseSurfaceDark = Color(0xFFFFFFFF)
val inverseOnSurfaceDark = Color(0xFF000000)
val inversePrimaryDark = Color(0xFF000000)
val surfaceDimDark = Color(0xFF0A0A0A)
val surfaceBrightDark = Color(0xFF2A2A2A)
val surfaceContainerLowestDark = Color(0xFF000000)
val surfaceContainerLowDark = Color(0xFF0A0A0A)
val surfaceContainerDark = Color(0xFF151515)
val surfaceContainerHighDark = Color(0xFF202020)
val surfaceContainerHighestDark = Color(0xFF2A2A2A)

// Dark Medium Contrast
val primaryDarkMediumContrast = Color(0xFFFFFFFF)
val onPrimaryDarkMediumContrast = Color(0xFF000000)
val primaryContainerDarkMediumContrast = Color(0xFF505050)
val onPrimaryContainerDarkMediumContrast = Color(0xFFFFFFFF)
val secondaryDarkMediumContrast = Color(0xFF505050)
val onSecondaryDarkMediumContrast = Color(0xFFFFFFFF)
val secondaryContainerDarkMediumContrast = Color(0xFF505050)
val onSecondaryContainerDarkMediumContrast = Color(0xFFFFFFFF)
val tertiaryDarkMediumContrast = Color(0xFFFFFFFF)
val onTertiaryDarkMediumContrast = Color(0xFF000000)
val tertiaryContainerDarkMediumContrast = Color(0xFF505050)
val onTertiaryContainerDarkMediumContrast = Color(0xFFFFFFFF)
val errorDarkMediumContrast = Color(0xFFDF826F)
val onErrorDarkMediumContrast = Color(0xFF000000)
val errorContainerDarkMediumContrast = Color(0xFFDF826F)
val onErrorContainerDarkMediumContrast = Color(0xFF000000)
val backgroundDarkMediumContrast = Color(0xFF0A0A0A)
val onBackgroundDarkMediumContrast = Color(0xFFFFFFFF)
val surfaceDarkMediumContrast = Color(0xFF0A0A0A)
val onSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
val surfaceVariantDarkMediumContrast = Color(0xFF1A1A1A)
val onSurfaceVariantDarkMediumContrast = Color(0xFFC0C0C0)
val outlineDarkMediumContrast = Color(0xFF404040)
val outlineVariantDarkMediumContrast = Color(0xFF404040)
val scrimDarkMediumContrast = Color(0xFFB8B8B8)
val inverseSurfaceDarkMediumContrast = Color(0xFFFFFFFF)
val inverseOnSurfaceDarkMediumContrast = Color(0xFF000000)
val inversePrimaryDarkMediumContrast = Color(0xFF000000)
val surfaceDimDarkMediumContrast = Color(0xFF0A0A0A)
val surfaceBrightDarkMediumContrast = Color(0xFF2A2A2A)
val surfaceContainerLowestDarkMediumContrast = Color(0xFF000000)
val surfaceContainerLowDarkMediumContrast = Color(0xFF0A0A0A)
val surfaceContainerDarkMediumContrast = Color(0xFF151515)
val surfaceContainerHighDarkMediumContrast = Color(0xFF202020)
val surfaceContainerHighestDarkMediumContrast = Color(0xFF2A2A2A)

// Dark High Contrast
val primaryDarkHighContrast = Color(0xFFFFFFFF)
val onPrimaryDarkHighContrast = Color(0xFF000000)
val primaryContainerDarkHighContrast = Color(0xFFFFFFFF)
val onPrimaryContainerDarkHighContrast = Color(0xFF000000)
val secondaryDarkHighContrast = Color(0xFF606060)
val onSecondaryDarkHighContrast = Color(0xFFFFFFFF)
val secondaryContainerDarkHighContrast = Color(0xFF606060)
val onSecondaryContainerDarkHighContrast = Color(0xFFFFFFFF)
val tertiaryDarkHighContrast = Color(0xFFFFFFFF)
val onTertiaryDarkHighContrast = Color(0xFF000000)
val tertiaryContainerDarkHighContrast = Color(0xFFFFFFFF)
val onTertiaryContainerDarkHighContrast = Color(0xFF000000)
val errorDarkHighContrast = Color(0xFFDF826F)
val onErrorDarkHighContrast = Color(0xFF000000)
val errorContainerDarkHighContrast = Color(0xFFDF826F)
val onErrorContainerDarkHighContrast = Color(0xFF000000)
val backgroundDarkHighContrast = Color(0xFF0A0A0A)
val onBackgroundDarkHighContrast = Color(0xFFFFFFFF)
val surfaceDarkHighContrast = Color(0xFF0A0A0A)
val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
val surfaceVariantDarkHighContrast = Color(0xFF1A1A1A)
val onSurfaceVariantDarkHighContrast = Color(0xFFFFFFFF)
val outlineDarkHighContrast = Color(0xFFC0C0C0)
val outlineVariantDarkHighContrast = Color(0xFFC0C0C0)
val scrimDarkHighContrast = Color(0xFFB8B8B8)
val inverseSurfaceDarkHighContrast = Color(0xFFFFFFFF)
val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
val inversePrimaryDarkHighContrast = Color(0xFF000000)
val surfaceDimDarkHighContrast = Color(0xFF0A0A0A)
val surfaceBrightDarkHighContrast = Color(0xFF2A2A2A)
val surfaceContainerLowestDarkHighContrast = Color(0xFF000000)
val surfaceContainerLowDarkHighContrast = Color(0xFF0A0A0A)
val surfaceContainerDarkHighContrast = Color(0xFF151515)
val surfaceContainerHighDarkHighContrast = Color(0xFF202020)
val surfaceContainerHighestDarkHighContrast = Color(0xFF2A2A2A)

val customColor1Light = Color(0xFF196B52)
val onCustomColor1Light = Color(0xFFFFFFFF)
val customColor1ContainerLight = Color(0xFFA6F2D2)
val onCustomColor1ContainerLight = Color(0xFF002116)
val chatGPTOfficialColorLight = Color(0xFF196B52)
val onChatGPTOfficialColorLight = Color(0xFFFFFFFF)
val chatGPTOfficialColorContainerLight = Color(0xFFA6F2D2)
val onChatGPTOfficialColorContainerLight = Color(0xFF002116)
val customColor2Light = Color(0xFF4F5B92)
val onCustomColor2Light = Color(0xFFFFFFFF)
val customColor2ContainerLight = Color(0xFFDDE1FF)
val onCustomColor2ContainerLight = Color(0xFF06164B)

val customColor1LightMediumContrast = Color(0xFF004D39)
val onCustomColor1LightMediumContrast = Color(0xFFFFFFFF)
val customColor1ContainerLightMediumContrast = Color(0xFF368267)
val onCustomColor1ContainerLightMediumContrast = Color(0xFFFFFFFF)
val chatGPTOfficialColorLightMediumContrast = Color(0xFF004D39)
val onChatGPTOfficialColorLightMediumContrast = Color(0xFFFFFFFF)
val chatGPTOfficialColorContainerLightMediumContrast = Color(0xFF368267)
val onChatGPTOfficialColorContainerLightMediumContrast = Color(0xFFFFFFFF)
val customColor2LightMediumContrast = Color(0xFF323F74)
val onCustomColor2LightMediumContrast = Color(0xFFFFFFFF)
val customColor2ContainerLightMediumContrast = Color(0xFF6572AA)
val onCustomColor2ContainerLightMediumContrast = Color(0xFFFFFFFF)

val customColor1LightHighContrast = Color(0xFF00281C)
val onCustomColor1LightHighContrast = Color(0xFFFFFFFF)
val customColor1ContainerLightHighContrast = Color(0xFF004D39)
val onCustomColor1ContainerLightHighContrast = Color(0xFFFFFFFF)
val chatGPTOfficialColorLightHighContrast = Color(0xFF00281C)
val onChatGPTOfficialColorLightHighContrast = Color(0xFFFFFFFF)
val chatGPTOfficialColorContainerLightHighContrast = Color(0xFF004D39)
val onChatGPTOfficialColorContainerLightHighContrast = Color(0xFFFFFFFF)
val customColor2LightHighContrast = Color(0xFF0F1E52)
val onCustomColor2LightHighContrast = Color(0xFFFFFFFF)
val customColor2ContainerLightHighContrast = Color(0xFF323F74)
val onCustomColor2ContainerLightHighContrast = Color(0xFFFFFFFF)

val customColor1Dark = Color(0xFF8AD6B7)
val onCustomColor1Dark = Color(0xFF003828)
val customColor1ContainerDark = Color(0xFF00513C)
val onCustomColor1ContainerDark = Color(0xFFA6F2D2)
val chatGPTOfficialColorDark = Color(0xFF8AD6B7)
val onChatGPTOfficialColorDark = Color(0xFF003828)
val chatGPTOfficialColorContainerDark = Color(0xFF00513C)
val onChatGPTOfficialColorContainerDark = Color(0xFFA6F2D2)
val customColor2Dark = Color(0xFFB8C4FF)
val onCustomColor2Dark = Color(0xFF1F2D61)
val customColor2ContainerDark = Color(0xFF374379)
val onCustomColor2ContainerDark = Color(0xFFDDE1FF)

val customColor1DarkMediumContrast = Color(0xFF8EDABB)
val onCustomColor1DarkMediumContrast = Color(0xFF001B12)
val customColor1ContainerDarkMediumContrast = Color(0xFF549E83)
val onCustomColor1ContainerDarkMediumContrast = Color(0xFF000000)
val chatGPTOfficialColorDarkMediumContrast = Color(0xFF8EDABB)
val onChatGPTOfficialColorDarkMediumContrast = Color(0xFF001B12)
val chatGPTOfficialColorContainerDarkMediumContrast = Color(0xFF549E83)
val onChatGPTOfficialColorContainerDarkMediumContrast = Color(0xFF000000)
val customColor2DarkMediumContrast = Color(0xFFBDC8FF)
val onCustomColor2DarkMediumContrast = Color(0xFF011046)
val customColor2ContainerDarkMediumContrast = Color(0xFF818EC8)
val onCustomColor2ContainerDarkMediumContrast = Color(0xFF000000)

val customColor1DarkHighContrast = Color(0xFFEDFFF5)
val onCustomColor1DarkHighContrast = Color(0xFF000000)
val customColor1ContainerDarkHighContrast = Color(0xFF8EDABB)
val onCustomColor1ContainerDarkHighContrast = Color(0xFF000000)
val chatGPTOfficialColorDarkHighContrast = Color(0xFFEDFFF5)
val onChatGPTOfficialColorDarkHighContrast = Color(0xFF000000)
val chatGPTOfficialColorContainerDarkHighContrast = Color(0xFF8EDABB)
val onChatGPTOfficialColorContainerDarkHighContrast = Color(0xFF000000)
val customColor2DarkHighContrast = Color(0xFFFCFAFF)
val onCustomColor2DarkHighContrast = Color(0xFF000000)
val customColor2ContainerDarkHighContrast = Color(0xFFBDC8FF)
val onCustomColor2ContainerDarkHighContrast = Color(0xFF000000)
